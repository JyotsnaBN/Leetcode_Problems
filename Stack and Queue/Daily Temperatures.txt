/*739. Daily Temperatures

Given an array of integers temperatures represents the daily temperatures, return an array answer 
such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. 
If there is no future day for which this is possible, keep answer[i] == 0 instead.

*/

class Solution 
{
    public int[] dailyTemperatures(int[] temp) 
    {
        int n = temp.length;
        Stack<Pair<Integer, Integer>> s = new Stack<Pair<Integer, Integer>>();
        int res[] = new int[n];
        
        for(int i = n-1; i>=0; i--)
        {
            if(s.isEmpty())
            {
                s.push(new Pair<Integer, Integer> (temp[i], i));
                //System.out.println("i - " + i + "  push  - " + temp[i] + " , " + i);
                continue;
            }
            if(s.peek().getKey()<=temp[i])
            {
                while(!s.isEmpty())
                {
                    if(s.peek().getKey()<=temp[i])
                        s.pop();
                        //System.out.println("i - " + i + "  pop - " + s.pop());
                    else
                        break;
                }
            }
            if(s.isEmpty())
            {
                s.push(new Pair<Integer, Integer> (temp[i], i));
                //System.out.println("i - " + i + "  push  - " + temp[i] + " , " + i);
                continue;
            }
            res[i] = s.peek().getValue() - i;
            s.push(new Pair<Integer, Integer> (temp[i], i));
            //System.out.println("i - " + i + "  push  - " + temp[i] + " , " + i);
            
            
                
        }
        return res;
    }
}