/*796. Rotate String
Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift.
/*


//Approach 1: Rotate the string by one character and check if it matches with the target string
class Solution {
    public boolean rotateString(String s, String g) 
    {
        if(s.length() != g.length())
            return false;
        int n = s.length();
        for(int i = 0; i<n; i++)
        {
            s = s.substring(1) + s.charAt(0);
            if(s.equals(g))
                return true;
        }
        return false;
    }
}



//Approach 2: Every time you encounter the first character of the target string in the original string, 
//create a new string after rotating the original string so that it begins with the 1st character of the target string 
class Solution {
    public boolean rotateString(String s, String g) 
    {
        if(s.length() != g.length())
            return false;
               
        int n = s.length();
        String temp = "";
        for(int i = 0; i<n; i++)
        {
            if(s.charAt(i)==g.charAt(0))
            {
                temp = s.substring(i) + s.substring(0, i);
                //System.out.println(temp);
                if(temp.equals(g))
                    return true;
            }
        }
        return false;
    }
}



//Approach 3: Create a new string s+s and search if the target string is present in the new string
class Solution {
    public boolean rotateString(String s, String g) 
    {
        if(s.length() != g.length())
            return false;
               
        int n = s.length();
        String temp = s + s;
        if(temp.contains(g))
            return true;
        return false;
    }
}





